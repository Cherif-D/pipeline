name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: diallo/mlops
  ECS_SERVICE: mlops_catboost-service-pb2xcw15
  ECS_CLUSTER: mlops_clusteR
  ECS_TASK_DEFINITION: mlops_catboost     # family/nom de la task definition ECS
  CONTAINER_NAME: mlops_clusteR           # DOIT = name dans containerDefinitions

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute image tag
        id: meta
        run: echo "tag=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build, tag and push image
        id: build-image
        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          TAG: ${{ steps.meta.outputs.tag }}
        run: |
          docker build -t "$REGISTRY/${{ env.ECR_REPOSITORY }}:$TAG" .
          docker push "$REGISTRY/${{ env.ECR_REPOSITORY }}:$TAG"
          echo "image=$REGISTRY/${{ env.ECR_REPOSITORY }}:$TAG" >> "$GITHUB_OUTPUT"

      - name: Download current task definition
        run: |
          aws ecs describe-task-definition --task-definition "${{ env.ECS_TASK_DEFINITION }}" \
          --query 'taskDefinition | {containerDefinitions: containerDefinitions, family: family, executionRoleArn: executionRoleArn, taskRoleArn: taskRoleArn, networkMode: networkMode, requiresCompatibilities: requiresCompatibilities, cpu: cpu, memory: memory}' \
          > task-definition.json
          echo "Containers in task def:"
          cat task-definition.json | jq -r '.containerDefinitions[].name'

      - name: Render new task definition with new image
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
